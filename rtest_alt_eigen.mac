(load("alt_eigen.mac"),kill(facts),reset(gcd,algebraic,domain,resultant),0);
0$

(check_eigenspace(M) := block([λ,xxx,pk,es,MM, OK : true],
    xxx : alt_eigen(M,'var = λ),
    for xk in xxx do (
        pk : first(xk),
        es : second(xk),
        MM : matrix(),
        for ck in es do (
            MM : addcol(MM, ck)),
        MM : fullratsubst(pk, (M - λ*identfor(M) ) . MM),
        OK : OK and every(lambda([q],q=0),MM)),
    OK),0);
0$

/* Does alt_eigen check the input correctly? The input should be a nonempty, square,
and unblocked matrix that has no entries that involve a floating point number. */

errcatch(alt_eigen(a+b));
[]$

errcatch(alt_eigen([a+b]));
[]$

errcatch(alt_eigen(matrix()));
[]$

errcatch(alt_eigen(matrix([1,2])));
[]$

errcatch(alt_eigen(genmatrix(lambda([a,b],genmatrix(lambda([c,d], random(12)),2,2)),2,2)));
[]$

errcatch(alt_eigen(matrix([3.14,2],[5,7])));
[]$

errcatch(alt_eigen(matrix([x+3.14,2],[5,7])));
[]$

errcatch(alt_eigen(matrix([1,2],[3,4]), 'maxdegree=%pi));
[]$

errcatch(alt_eigen(matrix([1,2],[3,4]), 'max=10));
[]$

errcatch(alt_eigen(matrix([1,2],[3,4]), 'maxdegree));
[]$

errcatch(alt_eigen(matrix([1,b],[b,1]),'var='b,maxdegree=1));
[]$

/* Does sspan work OK? */

sspan(matrix());
sspan()$

sspan(matrix([0],[0]));
sspan()$

sspan(matrix([0],[-1]));
sspan(matrix([0],[1]))$

sspan(matrix([2],[-4],[8]));
sspan(matrix([1],[-2],[4]))$

sspan(matrix([2],[-4],[8]), matrix([5*q],[10*q^2],[20*q^3]));
sspan(matrix([1],[-2],[4]),matrix([1],[2*q],[4*q^2]))$

/* Basic usage--diagonal & zero matrices */
alt_eigen(matrix([0]), 'var=z);
[[z=0,sspan(matrix([1]))]]$

alt_eigen(matrix([2]), 'var=z);
[[z=2,sspan(matrix([1]))]]$

alt_eigen(matrix([0,0],[0,0]), 'var=z);
[[z=0,sspan(matrix([0],[1]),matrix([1],[0]))]]$

alt_eigen(matrix([2,0],[0,2]), 'var=z);
[[z=2,sspan(matrix([0],[1]),matrix([1],[0]))]]$

alt_eigen(matrix([2,0],[0,8]), 'var=z);
[[z=2,sspan(matrix([1],[0]))],[z=8,sspan(matrix([0],[-1]))]]$

alt_eigen(matrix([0,%i],[1,0]),'var=z);
[[z^2=%i,sspan(matrix([%i],[z]))]]$

alt_eigen(matrix([1,2,3],[4,5,6],[0,0,2*sqrt(3)+3]),'var=z);
[[z=3-2*sqrt(3),sspan(matrix([sqrt(3)-1],[2*sqrt(3)-4],[0]))],
 [z=2*sqrt(3)+3,sspan(matrix([sqrt(3)+1],[2*sqrt(3)+4],[0]))]]$

/* Does the assuming function work OK? */
block([xxx : alt_eigen(matrix([1,0,2],[0,1,8],[0,0,q]), 'var=z)],[xxx, subst(q=28,xxx)]);
[assuming(notequal((q-1),0),[[z=q,sspan(matrix([-2],[-8],[1-q]))],
                               [z=1,sspan(matrix([0],[1],[0]),
                                          matrix([1],[0],[0]))]]),
[[z=28,sspan(matrix([-2],[-8],[-27]))],
 [z=1,sspan(matrix([0],[1],[0]),matrix([1],[0],[0]))]]]$

/* See #4169 spmod bug when algebraic is true */
(M : matrix([1,1/2,%i],[0,1,1/2],[0,1/2,1+%i]),0);
0$

block([gcd : subres], alt_eigen(M,'var=z));
[[z=(%i+2)/2,sspan(matrix([-1],[%i],[-1]))],
 [z=1,sspan(matrix([1],[0],[0]))]]$

block([gcd : spmod], alt_eigen(M,'var=z));
[[z=(%i+2)/2,sspan(matrix([-1],[%i],[-1]))],
 [z=1,sspan(matrix([1],[0],[0]))]]$

(M : matrix([15714,	24872,	12436],	[-1450,	-2151,	-1160],[-7025,	-11240,	-5451]),0);
0$

alt_eigen(M, var='z,maxdegree=1,'orthogonal=false);
[[z=169,sspan(matrix([-8],[5],[0]),matrix([0],[1],[-2]))],
  [z=7774,sspan(matrix([3109],[-290],[-1405]))]]$

alt_eigen(M, var='z,maxdegree=1,'orthogonal=true);
[[z=169,sspan(matrix([0],[1],[-2]),
              matrix([4],[-2],[-1]))],
 [z=7774,sspan(matrix([3109],[-290],[-1405]))]]$

check_eigenspace(M);
true$

(M : matrix(
		[(83241*%i+42732)/380320,-(7992*%i-2331)/95080,	(3996*%i+2997)/47540,-(2997*%i-3996)/47540],
		[-(40761*%i-248448)/3803200,(74178*%i+112071)/950800,(69876*%i+52407)/475400,	-(52407*%i-69876)/475400],
		[(66843*%i-407424)/7606400,	(229176*%i-66843)/1901600,(99342*%i-14631)/950800,	(85941*%i-114588)/950800],
		[(60921*%i-371328)/7606400,	(208872*%i-60921)/1901600,	-(104436*%i+78327)/950800,	(292257*%i-33126)/950800]),0);
0$

block([gcd : 'subres, algebraic : true], alt_eigen(M, 'var = z, 'orthogonal = false));
[[z=(27*%i-36)/800,sspan(matrix([-740],[-1294],	[1061],	[967]))],
 [z=(9*%i+3)/40,sspan(matrix([0],[0],[3*%i-4],[4*%i+3]),
   matrix([0],[24*%i+18],[24*%i-7],[0]),
   matrix([288*%i-84],[128-21*%i],[0],[0]))]]$

block([gcd : 'subres, algebraic : true], alt_eigen(M, 'var = z, 'orthogonal = true));
[[z=(27*%i-36)/800,sspan(matrix([-740],[-1294],[1061],[967]))],
  [z=(9*%i+3)/40,sspan(matrix([0],[0],[3*%i-4],[4*%i+3]),
    matrix([0],[48*%i+36],[24*%i-7],[-7*%i-24]),
    matrix([27936*%i-8148],[3200-525*%i],[-2694*%i-2808],[2694-2808*%i]))]]$

check_eigenspace(M);
true$

/* Example of  algebraic multiplicity =/= geometric multiplicity. */
alt_eigen(matrix([1,2],[0,1]),'var = z);
[[z=1,sspan(matrix([1],[0]))]]$

alt_eigen(matrix([1,2],[3,2]),'var = z);
[[z=-1,sspan(matrix([-1],[1]))],
 [z=4,sspan(matrix([-2],[-3]))]]$

alt_eigen(matrix([-1,-1,-2],[2,2,1],[6,2,6]),'var=q);
[[q=2,sspan(matrix([1],[1],[-2]))],
 [q=3,sspan(matrix([-1],[0],[2]))]]$

(remvalue(M),0);
0$

check_eigenspace(matrix([15714,24872,12436],	
                         [-1450,-2151,-1160],
		                     [-7025,-11240,-5451]));
true$

/* Some tests from eigen.dem */
(m : matrix([m1,0,0,0,m5],[0,m2,0,0,m5],[0,0,m3,0,m5],[0,0,0,m4,m5],[0,0,0,0,0]),0);
0$

alt_eigen(m,'var=z);
assuming(notequal(m1*m2*(m2-m1)*m3*(m3-m1)*(m3-m2)*m4*(m4-m1)*(m4-m2)*(m4-m3),0),
[[z=m4,sspan(matrix([0],[0],[0],[-1],[0]))],
 [z=m3,sspan(matrix([0],[0],[1],[0],[0]))],
 [z=m2,sspan(matrix([0],[-1],	[0],[0],[0]))],
 [z=m1,sspan(matrix([1],[0],[0],[0],[0]))],
 [z=0,sspan(matrix([-m2*m3*m4*m5],[-m1*m3*m4*m5],[-m1*m2*m4*m5],[-m1*m2*m3*m5],[m1*m2*m3*m4]
	))]])$

(m : matrix([5/2,50-25*%i],[50+25*%i,2505/2]),0);
0$

alt_eigen(m,'var=z,'maxdegree=2);
[[z=(150*sqrt(70)+1255)/2,sspan(matrix([2-%i],[3*sqrt(70)+25]))],
[z=-((150*sqrt(70)-1255)/2),sspan(matrix([2-%i],[25-3*sqrt(70)]))]]$

(remvalue(m),0);
0$

alt_eigen(matrix([a,-(d-a)^2/(4*c)],[c,	d]),'var=m);
[[m=(d+a)/2,sspan(matrix([d-a],[-2*c]))]]$

alt_eigen(matrix([1,b],[b,1]),'var=λ);
assuming(notequal(b,0),[[λ=1-b,sspan(matrix([1],[-1]))],
                              [λ=b+1,sspan(matrix([1],[1]))]])$

(declare(a,complex),alt_eigen(matrix([1,a],[conjugate(a),1]),'var=λ,'maxdegree=1));
assuming(notequal(a*conjugate(a),0),
    [[λ^2=2*λ+a*conjugate(a)-1,sspan(matrix([a],[λ-1]))]])$

(remove(a,complex),0);
0$
/* Example from https://en.wikipedia.org/wiki/Generalized_eigenvector */
alt_eigen(matrix([1,0,0,0,0],[3,1,0,0,0],[6,3,2,0,0],[10,6,3,2,0],[15,10,6,3,2]),'var=p);
[[p=1,sspan(matrix([0],[1],[-3],[3],[-1]))],
 [p=2,sspan(matrix([0],[0],[0],[0],[1]))]]$

 (assume(notequal(q,2)), assume(notequal(q,1)),0);
 0$

 alt_eigen(matrix([2,0,0,0,0],[3,1,0,0,0],[6,3,2,0,0],[10,6,3,2,0],[15,10,6,3,q]),'var=p);
 [[p=q,sspan(matrix([0],[0],[0],[0],[1]))],
  [p=1,sspan(matrix([0],[q-1],[3-3*q],[3*q-3],[-1]))],
  [p=2,sspan(matrix([0],[0],[0],[q-2],[-3]))]]$

(forget(notequal(q,2)), forget(notequal(q,1)),0);
0$

alt_eigen(matrix([q+5,q,2],[0,1,8],[0,0,q]),'var=z);
assuming(notequal((q-1)*(q+4),0),
 [[z=q+5,sspan(matrix([1],[0],[0]))],
  [z=q,sspan(matrix([10*q-2],[-40],[5-5*q]))],
  [z=1,sspan(matrix([q],[-q-4],[0]))]])$

(m : matrix(
		[(3*q+58)/32,	(9*q-4)/48,	(9*q-11)/96,	-(9*q-25)/32,	-(18*q-43)/96],
		[(q-2)/16,	(3*q+68)/24,	(3*q+7)/48,	-(3*q-19)/16,	-(6*q-25)/48],
		[(23*q-110)/64,	(69*q-244)/96,	(69*q+193)/192,	-(69*q-85)/64,	-(138*q-319)/192],
		[-(17*q-98)/64,	-(17*q-36)/32,	-(17*q-35)/64,	(51*q+29)/64,	(34*q-99)/64],
		[(3*q-38)/16,	(9*q-4)/24,	(9*q-11)/48,	-(9*q-25)/16,	-(18*q-187)/48]
	),0);
0$

alt_eigen(m,'var=z);

assuming(notequal((q-3)*(q-2),0),
  [[z=q,sspan(matrix([6],[4],[23],[-17],[12]))],
   [z=2,sspan(matrix([0],[3],[-9],[-1],[0]),
              matrix([2],[-5],[16],[0],[4]))],
   [z=3,sspan(matrix([0],[0],[1],[-1],[2]),
              matrix([14],[52],[-67],[17],[0]))]])$

(0, m : matrix(
		[1,	7,	8,	0,	4*sqrt(77)],
		[7,	1,	9,	0,	0],
		[8,	0,	1,	0,	0],
		[0,	0,	0,	2,	0],
		[4*sqrt(77),	0,	0,	0,	4]
	),0);
0$

alt_eigen(m,'var=z);

[[z^3=5*z^2+1340*z+168,sspan(matrix(
		[sqrt(77)*(-300*z-78)],
		[sqrt(77)*(-18*z-2046)],
		[sqrt(77)*(-2*z^2+8*z+288)],
		[0],
		[-71*z^2+71*z+3024]
	))],[z=2,sspan(matrix(
		[0],
		[0],
		[0],
		[1],
		[0]
	),matrix(
		[sqrt(77)],
		[79*sqrt(77)],
		[8*sqrt(77)],
		[0],
		[-154]
	))]]$

(remvalue(m),0);
0$

/* Did the code leak any facts or contexts?*/
facts();
[]$

contexts;
[initial,global]$

/* The values of gcd, algebraic, domain, and resultant should be unaltered.*/
reset(gcd,algebraic,domain, resultant);
[]$