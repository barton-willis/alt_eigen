(load("alt_eigen.mac"),0);
0$

/* Does alt_eigen check the input correctly? The input should be a nonempty, square,
and unblocked matrix that has no entries that involve a floating point number. */

errcatch(alt_eigen(a+b));
[]$

errcatch(alt_eigen([a+b]));
[]$

errcatch(alt_eigen(matrix()));
[]$

errcatch(alt_eigen(matrix([1,2])));
[]$

errcatch(alt_eigen(genmatrix(lambda([a,b],genmatrix(lambda([c,d], random(12)),2,2)),2,2)));
[]$

errcatch(alt_eigen(matrix([3.14,2],[5,7])));
[]$

errcatch(alt_eigen(matrix([x+3.14,2],[5,7])));
[]$

/* Basic usage--diagonal matrices */
alt_eigen(matrix([0]), 'var=z);
[z=0,[matrix([1])]]$

alt_eigen(matrix([2]), 'var=z);
[z=2,[matrix([1])]]$

alt_eigen(matrix([0,0],[0,0]), 'var=z);
[z=0,[matrix([1],[0]),matrix([0],[1])]]$

alt_eigen(matrix([2,0],[0,2]), 'var=z);
[z=2,[matrix([0],[1]),matrix([1],[0])]]$

alt_eigen(matrix([2,0],[0,8]), 'var=z);
[z=2,[matrix([1],[0])],z=8,[matrix([0],[-1])]]$

/* Does the assuming function work OK? */
block([xxx : alt_eigen(matrix([1,0,2],[0,1,8],[0,0,q]), 'var=z)],[xxx, subst(q=28,xxx)]);
[assuming(notequal((q-1)^2,0),[z=q,[matrix([-2],[-8],[1-q])],
    z=1,[matrix([0],[1],[0]),matrix([1],[0],[0])]]),
    [z=28,[matrix([-2],[-8],[-27])],
    z=1,[matrix([0],[1],[0]),matrix([1],[0],[0])]]]$

/* See #4169 spmod bug when algebraic is true */
(M : matrix([1,1/2,%i],[0,1,1/2],[0,1/2,1+%i]),0);
0$

block([gcd : subres], alt_eigen(M,'var=z));
[z=(%i+2)/2,[matrix([-1],[%i],[-1])],z=1,[matrix([1],[0],[0])]]$

block([gcd : spmod], alt_eigen(M,'var=z));
[z=(%i+2)/2,[matrix([-1],[%i],[-1])],z=1,[matrix([1],[0],[0])]]$

(M : matrix([15714,	24872,	12436],	[-1450,	-2151,	-1160],[-7025,	-11240,	-5451]),0);
0$

alt_eigen(M, var='z,maxdegree=1,'orthogonal=false);
[z=169,[matrix([-8],[5],[0]),matrix([0],[1],[-2])],
z=7774,[matrix([3109],[-290],[-1405])]]$

alt_eigen(M, var='z,maxdegree=1,'orthogonal=true);
    [z=169,[matrix([40/89],[64/89],[-2]),matrix([-8],[5],[0])],
    z=7774,[matrix([3109],[-290],[-1405])]]$

(remvalue(M),0);
0$

contexts;
[initial,global]$